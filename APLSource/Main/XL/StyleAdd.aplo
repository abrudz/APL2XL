 StyleAdd←{
    ⍝. ⍵          ←→ numFmt font fill border
    ⍝. ⍺          ←→ WB namespace
    ⍝. ⍺⍺         ←→ isMerge
    ⍝. numFmt     ←→ 'formatcode'                   -- char vec
    ⍝. font       ←→ size color name family         -- int charvec charvec charvec
    ⍝. fill       ←→ pattern foreground background  -- 5⍴(style hexcolor) -- ('charvec' 'charvec')
    ⍝. border     ←→ left right top bottom diagonal -- nested vec

    ⍝. WrapText   ←→ boolean scalar/vector/matrix
    ⍝. Horizontal ←→ nested character scalar/vector/matrix
    ⍝. Vertical   ←→ nested character scalar/vector/matrix
    ⍝. ShrinkToFit←→ boolean scalar/vector/matrix
    ⍝. MergeCells ←→ boolean scalar not implemented

     0=⍴⍵:0
     s      ←⍺.Styles
     columns←'numFmt' 'fonts' 'fills' 'borders' 'wrapText' 'horizontal' 'vertical' 'shrinkToFit' 'indent'
     max    ←⊃⌈/⍴¨⍵ ⍝ get the largest shape (if there is 0 styles, no shape, if there is a style: ⍴range.Value)


    ⍝. Number formats are handled separately since s.numFmts is a vector, and custom numFmts index starts at 164
     s.numFmts←s.numFmts,∪,0⊃⍵
     numid    ←max⍴(163×0≠nid)+nid                                                                                     ←s.numFmts⍳,0⊃⍵
     addUnique←{⍵≡'':⍺ ⋄ ⍺⍪∪↑,⍵}         ⍝ collect only unique values
     id       ←max∘⍴{⍵≡'':0 ⋄ ⍺⍳↑,⍵}     ⍝ find the index of each value, or reshape 0 to match the shape of existing styles
     h        ←1↓(⊂'horizontal')⍷columns ⍝ drop the first because numFmt
     hv       ←1↓columns∊'horizontal' 'vertical'

   ⍝. Styles are processed the same way besides numfmts and horizontal/vertical
     dropHV   ←(~hv)/1↓⍵
     noHV     ←s.(fonts fills borders wrapText shrinkToFit indent)
     unique   ←noHV   addUnique¨dropHV
     uniqueIds←unique id       ¨dropHV
     s.(fonts fills borders wrapText shrinkToFit indent)     ←unique
     (fontid fillid bordid wrapTextid shrinkToFitid indentid)←uniqueIds

    ⍝. Horizontal and Vertical rules
     pickHV     ←hv/1↓⍵
     onlyHV     ←s.(horizontal vertical)
     uniqueHV   ←onlyHV   {0≠≢⍵:∪⍺,⊆,⍵ ⋄ ⍺}¨pickHV
     uniqueHVIds←uniqueHV {(⍴⍵)⍴⍺⍳,⍵}      ¨pickHV
     s.(horizontal vertical)  ←uniqueHV
     (horizontalid verticalid)←uniqueHVIds

     styles   ←⍉↓⍉↑numid fontid fillid bordid wrapTextid horizontalid verticalid shrinkToFitid indentid⍝ Join styles by cell and orient cells correctly
     merged   ←⍺⍺{⍺:⊆⊃styles ⋄ ⍵}styles ⍝ merge if necessary
     s.cellXfs←s.cellXfs⍪∪↑,merged      ⍝  Add the unique styles to the xfs id table

     s.cellXfs id merged ⍝ Return all of the cell ids
 }
