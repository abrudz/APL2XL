 Export←{
     ⍝. ⍵          ←→ namespace containing:
     ⍝. ⍵.FileName ←→ the name to be written to, either relative or fully qualified
     ⍝. ⍵.Sheets   ←→ array of "worksheet" namespaces
     ⍝. ⍵.Sheets[n]           ←→ namespace containing:
     ⍝. ⍵.Sheets[n].Name      ←→ name of a worksheet found in a workbook
     ⍝. ⍵.Sheets[n].Ranges    ←→ array of value ranges and formatting information
     ⍝. ⍵.Sheets[n].Ranges[n]              ←→ namespace containing:
     ⍝. ⍵.Sheets[n].Ranges[n].NumberFormat ←→ apply numberformat to range
     ⍝. ⍵.Sheets[n].Ranges[n].Value        ←→ values in the range
     ⍝. ⍵.Sheets[n].Ranges[n].Address      ←→ address can be either indices i.e. ←→ 0 0 (at cell A1) or cell string i.e. ←→ 'A1' (at index 0 0)

     ⍝. Validation
     777::GetErrorMessage ⎕SIGNAL 11
     ∨/2<≢∘⍴¨(∊(,⍵.Sheets).Ranges).Value:'RANK ERROR: Range values must be less than rank 3'⎕SIGNAL 11
     ∨/2<≡¨(∊(,⍵.Sheets).Ranges).Value:'DEPTH ERROR: Range values must be less than depth 3'⎕SIGNAL 11

     ⍝. Create an empty namespace with containers for the intermediate data representation used for compiling XML
     wb←##.Main.XL.WB ⍵.FileName 1

     ⍝. Add each of the ranges in this sheet to the wb worksheet table
     sheets←{
         wb←⍺
         sheet←⍵
         _←wb ##.Main.XL.WSViews sheet ⍝ handle global properties like sheets
         {wb ranges(sheet.Name)⍵}¨⍵.Ranges
     }

     ⍝. Add a range to the worksheet table in wb
     ranges←{
         (sname range)←⍵
         range.Address←{83=⎕DR ⍵:##.Main.XL.itc ⍵ ⋄ ⍵}range.Address               ⍝ Convert indices to cell values: 0 0 → 'A1'
         styles←range∘{0<⍺.⎕NC ⍵:⊆⍺⍎⍵ ⋄ ''}¨'NumberFormat' 'Font' 'Fill' 'Border' ⍝ Collect all of the styles in the range
         ⍺ ##.Main.XL.WSAdd sname range.Address styles(range.Value)               ⍝ Add this range to an intermediate table
     }

⍝     nameSheets←{
         ⍝ Provide sheets with a default Name if none is provided
⍝         S      ← ,⍵
⍝         anon   ← ⍸,0=⊃,/S.⎕NC⊂'Name' 
⍝         0=≢anon: S
⍝         anon { S[⍺].Name←,/(⍵⍴⊂'Sheet'),⍪' '(≠⊆⊢)⍕1+⍳⍵ ⋄ S }≢anon
⍝     }

     nameSheets←{
        s←,⍵
        n←{6::'' ⋄ ⍵.Name}¨s
        d←'Sheet'∘,¨⍕¨1+⍳≢s
        m←⍸0=≢¨n
        r←(≢m)↑d~n
        s.Name←(r@m)n 
        ⍵ 
    }

     _←wb sheets¨nameSheets ⍵.Sheets
     ##.Main.Build.CompileXML wb ⍝. Compile the workbook file as a .xlsx zipped directory
 }
