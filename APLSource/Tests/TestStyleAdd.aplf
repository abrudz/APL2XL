 TestStyleAdd←{
   ⍝. This function tests adding styles in all its various forms
   ⍝. When a unique combination of styles are added to a worksheet, first each unique item is added to their respective tables
   ⍝. Then that unique combination is added to CellXFS table. The CellXfs index is the index used by the cell to assign a style
     xl←##.Main.XL

   ⍝. Single values for a given style must be enclosed as seen in the simpleStyle
     simpleStyle←##.Tests.Utility.SimpleStyle''
     backPad←¯5
     ns←≢simpleStyle

   ⍝. Advanced style testing
     numFmt       ←'#,##0' '0.00%' 'm/d/yyyy'
     fonts        ←(20 1 'Calibri' 2 0 0 0)(40 1 'Calibri' 2 0 0 0)(10 1 'Calibri' 2 0 0 0)
     fills        ←('solid' 'F12345' 'ABCDEF')('solid' 'AA1122' '0000cc')('solid' '0cc133' 'FF6699')
     borders      ←(5⍴⊂'thick' 1)(5⍴⊂'thin' '00FF00')(5⍴⊂'thin' 'FF00FF')
     advancedStyle←(numFmt fonts fills borders),backPad↑simpleStyle

  ⍝. All function results are of the following form
  ⍝. Check that the worksheet was has the correct style in the correct position
  ⍝. Also check that the cellXfs indices are set correctly
     ConfirmValues←{(((1,ns)⍴⍺)≡¯1↑⍵.Styles.cellXfs)∧(((⍴3⊃sheet)⍴1)≡2⊃sheet←⊃↓⍵.WS)}

  ⍝. Before Each
     NewWB←{ ⍝ Return an empty workbook
         fileName←(739⌶0),'/XL2APLSimpleSheet.xlsx'
         overwrite←1
         xl.WB fileName overwrite
     }

    ⍝. Test templates
     SimpleStyleTest←{
         style←⍵
         expected←⍺
         wb←NewWB''
         value←3 3⍴⍳9
         _←wb xl.WSAdd'TestSheetName' 'A1'style value 0
         expected ConfirmValues wb
     }

     AdvancedStyleTest←{
         style←⍵
         test←⍺⍺
         value←⍺
         wb←NewWB''
         _←wb xl.WSAdd'TestSheetName' 'A1'style value 0
         expected←(4, ns)⍴0 0 0 0 0 0 0 0 0 164 1 2 1 0 0 0 0 0 165 2 3 2 0 0 0 0 0 166 3 4 3 0 0 0 0 0
         expected ⍺⍺ wb value
     }

     BasicStyle←{
         164 1 2 1 0 0 0 0 0 SimpleStyleTest simpleStyle
     }

     OnlyNumFmt←{
         ⍝. Test adding only number formats
         ⍝. Number format indices start at 164, because there are built-in numbers
         ⍝. APL2XL treats all numberformats as not being built-in
         style←(simpleStyle[0]),(3⍴⊂''),backPad↑simpleStyle
         164 0 0 0 0 0 0 0 0 SimpleStyleTest style
     }

     OnlyFont←{
         ⍝. Test adding only a new font and nothing else
         ⍝. wb.Styles.fonts has a default font, and thus the new font is at index 1, and not 0
         style←(⊂''),(simpleStyle[1]),(2⍴⊂''),backPad↑simpleStyle
         0 1 0 0 0 0 0 0 0 SimpleStyleTest style
     }

     OnlyFill←{
         ⍝. Test adding only a new fill and nothing else
         ⍝. wb.Styles.fonts has 2 default fills, and thus the new font is at index 2, and not 1
         style←(2⍴⊂''),(simpleStyle[2]),(⊂''),backPad↑simpleStyle
         0 0 2 0 0 0 0 0 0 SimpleStyleTest style 
     }

     OnlyBorder←{
         ⍝. Test adding only a new border and nothing else
         ⍝. wb.Styles.borders has a default border, and thus the new font is at index 1, and not 0
         style←(3⍴⊂''),(simpleStyle[3]),backPad↑simpleStyle
         0 0 0 1 0 0 0 0 0 SimpleStyleTest style
     }

     ColumnStyles←{
         value←5 3⍴10000+⍳10
         test←{
             (wb value)←⍵
             (⍺≡wb.Styles.cellXfs)∧((⍴value)⍴1 2 3)≡2⊃⊃↓wb.WS
         }
         value (test AdvancedStyleTest) advancedStyle
     }

     RowStyles←{
         ⍝. Test that it is possible to arrange styles per row
         ⍝. Row styles must be manually arranged unlike columns
         value←3 5⍴10000+⍳10
         style←{⍉5 3⍴⍵}¨advancedStyle ⍝ rearrange styles to be row oriented
         test←{
             (wb value)←⍵
             (⍺≡wb.Styles.cellXfs)∧(⍉(⌽⍴value)⍴1 2 3)≡2⊃⊃↓wb.WS
         }
         value (test AdvancedStyleTest) style
     }

     t←Utility.TestCase

     bs   ←(BasicStyle   t)''
     onfmt←(OnlyNumFmt   t)''
     ofont←(OnlyFont     t)''
     ofill←(OnlyFill     t)''
     ob   ←(OnlyBorder   t)''
     ocs  ←(ColumnStyles t)''
     ors  ←(RowStyles    t)''
     bs onfmt ofont ofill ob ocs ors
 }
