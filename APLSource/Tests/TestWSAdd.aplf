 TestWSAdd←{
     xl←##.Main.XL

     NewWB←{
         fileName←(739⌶0),'/XL2APLSimpleSheet.xlsx'
         overwrite←1
         xl.WB fileName overwrite
     }

     ⍝ Test that a numerical value is added to wb.WS
     NumTest←{
         wb←NewWB''
         nums←3 3⍴⍳9
         _←wb xl.WSAdd'TestSheetName' 'A1' ''nums
         (1 5⍴'TestSheetName' 'A1'((⍴nums)⍴0)nums((⍴nums)⍴'n'))≡1↑wb.WS
     }

     ⍝ Test adding a second value to the same cell
     ⍝ This is possible, but will cause XML errors, and thus should be avoided
     ⍝ A fast solution for avoiding writing to existing cell values would be useful if one can be found
     TestDuplicateCells←{
         wb←NewWB''
         nums←3 3⍴⍳9
         _←wb xl.WSAdd'TestSheetName' 'A1' ''nums

         nums2←4 4⍴10×⍳16
         _←wb xl.WSAdd'TestSheetName' 'A1' ''nums2
         (1 5⍴'TestSheetName' 'A1'((⍴nums2)⍴0)nums2((⍴nums2)⍴'n'))≡¯1↑wb.WS
     }

     ⍝ Test incrementing ids
     ⍝ Test type coercion of strings.
     ⍝ Test adding a second worksheet
     ⍝ When string values are added to a worksheet, 's' is the type, and the value is the index into wb.SS
     ⍝ The index of the shared strings table
     StrTest←{
         wb←NewWB''
         nums←3 3⍴⍳9
         _←wb xl.WSAdd'TestSheetName' 'A1' ''nums

         strings←3 3⍴'zero' 'one' 'two'
         _←wb xl.WSAdd'TestSheetName2' 'A1' ''strings
         (1 5⍴'TestSheetName2' 'A1'(3 3⍴0)(3 3⍴⍳3)(3 3⍴'s'))≡¯1↑wb.WS
     }

     StrTest2←{
        ⍝ Test adding value to a different cell in the same workbook
        ⍝ The value index should be different for unique strings. Note: 'one' appears twice
         wb←NewWB''
         strings←3 3⍴'zero' 'one' 'two'
         _←wb xl.WSAdd'TestSheetName' 'A1' ''strings
         firstValueIsCorrect←(1 5⍴'TestSheetName' 'A1'(3 3⍴0)(3 3⍴⍳3)(3 3⍴'s'))≡¯1↑wb.WS

         strings2←3 3⍴'three' 'four' 'one'
         _←wb xl.WSAdd'TestSheetName' 'D1' ''strings2
         firstValueIsCorrect∧(1 5⍴'TestSheetName' 'D1'(3 3⍴0)(3 3⍴3 4 1)(3 3⍴'s'))≡¯1↑wb.WS
     }

     ValueWithStyle←{
        ⍝ Test adding basic styles along with a value
         wb←NewWB''
         nfmt←⊂'#,##0'
         font←⊂20 1 'Calibri' 2
         fill←⊂'solid' 'F12345' '0000cc'
         brdr←⊂5⍴('thin' 1)('thick' '0000cc')
         style←nfmt font fill brdr
         strings←3 3⍴'three' 'four' 'one'

         _←wb xl.WSAdd'TestSheetName' 'A1'style strings
         (1 5⍴'TestSheetName' 'A1'(3 3⍴1)(3 3⍴0 1 2)(3 3⍴'s'))≡¯1↑wb.WS
     }

     ∧/(NumTest'')(StrTest'')(StrTest2'')(TestDuplicateCells'')(ValueWithStyle'')
 }
