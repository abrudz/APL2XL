 TestWSAdd←{
     xl←##.Main.XL
     fileName←(739⌶0),'/XL2APLSimpleSheet.xlsx'
     overwrite←1
     wb←xl.WB fileName overwrite

     ⍝ Test that a numerical value is added to wb.WS
     nums←3 3⍴⍳9
     _←wb xl.WSAdd'TestSheetName' 'A1' ''nums
     numTest←(1 6⍴1 'TestSheetName' 'A1' 0 nums'n')≡1↑wb.WS

     ⍝ Test adding a second value to the same cell
     ⍝ This is possible, but will cause XML errors, and thus should be avoided
     ⍝ A fast solution for avoiding writing to existing cell values would be useful if one can be found
     nums2←4 4⍴10×⍳16
     _←wb xl.WSAdd'TestSheetName' 'A1' ''nums2
     testDuplicateCells←(1 6⍴2 'TestSheetName' 'A1' 0 nums2'n')≡¯1↑wb.WS

     ⍝ Test incrementing ids
     ⍝ Test type coercion of strings.
     ⍝ Test adding a second worksheet
     ⍝ When string values are added to a worksheet, 's' is the type, and the value is the index into wb.SS
     ⍝ The index of the shared strings table
     strings←3 3⍴'zero' 'one' 'two'
     _←wb xl.WSAdd'TestSheetName2' 'A1' ''strings
     strTest←(1 6⍴3 'TestSheetName2' 'A1' 0(3 3⍴⍳3)'s')≡¯1↑wb.WS

     ⍝ Test adding value to a different cell in the same workbook
     strings2←3 3⍴'three' 'four' 'one'
     _←wb xl.WSAdd'TestSheetName2' 'D1' ''strings2
     strTest2←(1 6⍴4 'TestSheetName2' 'D1' 0(3 3⍴3 4 1)'s')≡¯1↑wb.WS

     ⍝ Test adding basic styles along with a value
     nfmt←⊂'#,##0'
     font←20 1 'Calibri' 2
     fill←'solid' 'F12345' '0000cc'
     brdr←5⍴('thin' 1)('thick' '0000cc')
     style←nfmt font fill brdr

     _←wb xl.WSAdd'TestSheetName2' 'A10'style strings2
     valueWithStyle←(1 6⍴5 'TestSheetName2' 'A10' 1(3 3⍴3 4 1)'s')≡¯1↑wb.WS

     ∧/numTest strTest strTest2 testDuplicateCells valueWithStyle
 }
